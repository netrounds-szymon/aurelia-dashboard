{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/dashboard/dashboard.ts","src/index/index.ts","src/resources/index.ts","src/resources/data-providers/web-api.ts","src/resources/models/employee.ts","src/resources/elements/employee-container/employee-container.ts","src/resources/elements/loading-indicator/loading-indicator.ts","src/resources/elements/employee-list/employee-list-messages.ts","src/resources/elements/employee-list/employee-list.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Router, RouterConfiguration } from 'aurelia-router';\n\nexport class App {\n  router: Router;\n\n  configureRouter(config: RouterConfiguration, router: Router) {\n    config.title = 'Aurelia Dashboard';\n    config.map([\n      {\n        route: '',\n        moduleId: './index/index',\n        title: 'Main page'\n      },\n      {\n        route: '/dashboard/',\n        moduleId: './dashboard/dashboard',\n        title: 'Dashboard'\n      },\n    ]);\n\n    this.router = router;\n  }\n}","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Dashboard {\n}","export class Index {\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources(['./elements/loading-indicator/loading-indicator']);\n}\n","import * as data from 'text!./data.json';\nimport { Employee } from '../models/employee'\n\nexport class WebAPI {\n    jsonData;\n\n    connect() {\n        try {\n            this.jsonData = JSON.parse(data);\n        } catch (ex) {\n            console.log(ex);\n        }\n    }\n\n    listEmployee() {\n        return this.jsonData.map(x => { return new Employee(x.id, x.name, x.email,x.about)});\n    }\n\n    getEmployee(id: number) {\n        let found = this.jsonData.filter(x => x.id == id)[0];\n        return new Employee(found.id, found.name, found.email,found.about);\n    }\n}\n","export class Employee {\n    id: number;\n    name: string;\n    email: string;\n    about: string;\n\n    constructor(id: number, name: string, email: string, about: string) {\n        this.id = id;\n        this.name = name;\n        this.about = about;\n        this.email = email;\n    }\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { WebAPI } from '../../data-providers/web-api';\nimport { EmployeeListSelected } from '../employee-list/employee-list-messages';\nimport { Employee } from '../../models/employee';\n\n@inject(WebAPI, EventAggregator)\nexport class EmployeeContainer {\n    title = \"Employee of the month\";\n    employee: Employee;\n\n    constructor(private api: WebAPI, ea: EventAggregator) {\n        api.connect();\n        ea.subscribe(EmployeeListSelected, msg => {\n            // let id = msg.employee.id;\n            // this.employee = api.getEmployee(id);\n            this.employee = msg.employee;\n        });\n    }\n}","import * as nprogress from 'nprogress';\nimport { bindable, noView } from 'aurelia-framework';\n\n@noView(['nprogress/nprogress.css'])\nexport class LoadingIndicator {\n    @bindable loading = false;\n\n    loadingChanged(newValue) {\n        if (newValue) {\n            nprogress.start();\n        } else {\n            nprogress.done();\n        }\n    }\n}","import { Employee } from '../../models/employee';\n\nexport class EmployeeListSelected {\n    constructor (public employee: Employee){}\n}","import { inject } from 'aurelia-framework';\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { WebAPI } from '../../data-providers/web-api';\nimport { EmployeeListSelected } from './employee-list-messages';\nimport { Employee } from '../../models/employee';\n\n@inject(WebAPI, EventAggregator)\nexport class EmployeeList {\n    title = \"Select employee of the month\";\n    employees;\n    selectedId = 0;\n\n    constructor(private api: WebAPI, private ea: EventAggregator) { }\n\n    created() {\n        this.api.connect()\n        this.employees = this.api.listEmployee();\n    }\n\n    select(employee) {\n        this.selectedId = employee.id;\n        this.ea.publish(new EmployeeListSelected(employee));\n        return true;\n    }\n}"],"sourceRoot":".."}